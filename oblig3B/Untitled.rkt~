#|(define (transform-if test trans seq)
  (define ())
  (if (null? seq)
      '()
      (cons (cond(test (car seq))
                 (trans (car seq))(car seq)))
      (transfor-if ))) |#



(append '(1 2) '(3))


(define (test seq)
  (define (iter lst tall)
    (if (null? lst)
        tall
        (iter (cdr seq) (+ tall 1)))))